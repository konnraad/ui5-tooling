import{_ as e,c as a,o as t,a4 as i}from"./chunks/framework.B94ikmwp.js";const f=JSON.parse('{"title":"Migrate to v2","description":"","frontmatter":{},"headers":[],"relativePath":"updates/migrate-v2.md","filePath":"updates/migrate-v2.md"}'),s={name:"updates/migrate-v2.md"},o=i(`<h1 id="migrate-to-v2" tabindex="-1">Migrate to v2 <a class="header-anchor" href="#migrate-to-v2" aria-label="Permalink to &quot;Migrate to v2&quot;">​</a></h1><p>v2.0.0 of the UI5 Tooling was released on April 1, 2020. As a major feature, it introduces the easy consumption of SAPUI5 libraries in UI5 projects.</p><h2 id="breaking-changes" tabindex="-1">Breaking changes <a class="header-anchor" href="#breaking-changes" aria-label="Permalink to &quot;Breaking changes&quot;">​</a></h2><p><strong>All UI5 Tooling Modules: Require Node.js &gt;= 10</strong></p><p>Support for older Node.js releases has been dropped.</p><p><strong>UI5 Builder: Make namespace mandatory for application and library projects (<a href="https://github.com/SAP/ui5-builder/pull/430" target="_self" rel="noreferrer">SAP/ui5-builder#430</a>)</strong></p><p>The UI5 Tooling must be able to determine an application- or library project&#39;s namespace. Otherwise an error is thrown.</p><p>Ideally the namespace should be defined in the <code>sap.app/id</code> field of the <a href="https://ui5.sap.com/#/topic/be0cf40f61184b358b5faedaec98b2da" target="_self" rel="noreferrer"><code>manifest.json</code></a></p><p>In case of libraries, additional fallbacks are in place:</p><ol><li>The <code>name</code> attribute defined in the <code>.library</code> file</li><li>The path of the <code>library.js</code> file</li></ol><p><strong>UI5 Builder: LibraryFormatter: Ignore manifest.json of nested apps (<a href="https://github.com/SAP/ui5-builder/pull/392" target="_self" rel="noreferrer">SAP/ui5-builder#392</a>)</strong></p><p>If a library contains both a manifest.json and a .library file, they must be located in the same directory. Otherwise the manifest.json is ignored. In cases where the manifest.json is located at a higher level or in a different directory at the same level as the .library file, an exception is thrown.</p><p><strong>UI5 Server: serveResources middleware: Expect <code>*.properties</code> files in UTF-8 by default (<a href="https://github.com/SAP/ui5-server/pull/303" target="_self" rel="noreferrer">SAP/ui5-server#303</a>)</strong></p><p>For projects of types <strong>other</strong> than <code>application</code> or <code>library</code>, the UI5 Server now expects <code>*.properties</code> files to be UTF-8 encoded as opposed to <code>ISO-8859-1</code> before.</p><p><em><strong>Note:</strong> This change does not affect most projects as <code>*.properties</code> files are typically only located in applications or libraries, for which their project specific <a href="./../pages/Configuration.html#encoding-of-properties-files">configuration</a> is used.</em></p><p><strong>UI5 FS: Remove deprecated parameter useNamespaces (<a href="https://github.com/SAP/ui5-fs/pull/223" target="_self" rel="noreferrer">SAP/ui5-fs#223</a>)</strong></p><p>Remove the deprecated parameter <code>useNamespaces</code> from method <a href="https://sap.github.io/ui5-tooling/v2/api/module-@ui5_fs.resourceFactory.html#.createCollectionsForTree" target="_self" rel="noreferrer"><code>resourceFactory.createCollectionsForTree</code></a>. Use the parameter <code>getVirtualBasePathPrefix</code> instead.</p><h2 id="how-to-upgrade" tabindex="-1">How to upgrade <a class="header-anchor" href="#how-to-upgrade" aria-label="Permalink to &quot;How to upgrade&quot;">​</a></h2><h3 id="global-installation" tabindex="-1">Global installation <a class="header-anchor" href="#global-installation" aria-label="Permalink to &quot;Global installation&quot;">​</a></h3><p>To upgrade your global installation, just run the installation command again, which will upgrade to the latest version.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm install --global @ui5/cli</span></span></code></pre></div><p><strong>Note:</strong> Your local CLI installation will still be preferred, so you need to make sure to upgrade it as well (see <a href="https://github.com/SAP/ui5-cli#local-vs-global-installation" target="_self" rel="noreferrer">Local vs. Global installation</a>).</p><h3 id="local-installation" tabindex="-1">Local installation <a class="header-anchor" href="#local-installation" aria-label="Permalink to &quot;Local installation&quot;">​</a></h3><p>To upgrade the CLI installation within a project, you need to run the following command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm install --save-dev @ui5/cli@^2</span></span></code></pre></div><h3 id="ui5-yaml" tabindex="-1">ui5.yaml <a class="header-anchor" href="#ui5-yaml" aria-label="Permalink to &quot;ui5.yaml&quot;">​</a></h3><h4 id="specversion-2-0" tabindex="-1"><code>specVersion: &quot;2.0&quot;</code> <a class="header-anchor" href="#specversion-2-0" aria-label="Permalink to &quot;\`specVersion: &quot;2.0&quot;\`&quot;">​</a></h4><p>We have introduced the <a href="./../pages/Configuration.html#specification-version-10">specification version <code>2.0</code></a>. New features will only be available for projects with specVersion <code>2.0</code> or newer.<br> Most projects defining specVersion <code>0.1</code> or <code>1.0</code> can still be used.</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">specVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;project-name&gt;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;project-type&gt;</span></span></code></pre></div>`,29),r=[o];function l(n,p,c,d,h,u){return t(),a("div",null,r)}const m=e(s,[["render",l]]);export{f as __pageData,m as default};
